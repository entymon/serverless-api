service: serverless-api

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.userModel}
    POSTS_TABLE: ${self:custom.postModel}

functions:
  app:
    handler: app/handler.app
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http: 'ANY {proxy+}'
  getUser:
    handler: app/handler.app
    events:
      - http: 'GET /users/{proxy+}'
  createUser:
    handler: app/handler.app
    events:
      - http: 'POST /users'

resources:
  Resources:

    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:*:*:table/my-table
        Roles:
          - Ref: IamRoleLambdaExecution

    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.userModel}
        AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        KeySchema:
        - AttributeName: uuid
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10

    PostsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.postModel}
        AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        - AttributeName: title
          AttributeType: S
        KeySchema:
        - AttributeName: uuid
          KeyType: HASH
        - AttributeName: title
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10

plugins:
  - serverless-offline
  - serverless-express
  - serverless-dynamodb-local

custom:

  serverless-offline:
    port: 4000

  dynamodb:
    start:
      migrate: true

  userModel: 'users'
  postModel: 'posts'

